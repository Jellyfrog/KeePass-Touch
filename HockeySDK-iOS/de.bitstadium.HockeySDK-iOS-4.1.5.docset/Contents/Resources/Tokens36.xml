<?xml version="1.0" encoding="UTF-8"?>
<Tokens version="1.0">
	<File path="Constants/BITAuthenticatorIdentificationType.html">
		
		<Token>
			<TokenIdentifier>//apple_ref/c/tdef/BITAuthenticatorIdentificationType</TokenIdentifier>
			<Abstract type="html">Identification Types</Abstract>
			<DeclaredIn>BITAuthenticator.h</DeclaredIn>
            
			
			<NodeRef refid="36"/>
		</Token>
		
		
        
        <Token>
            <TokenIdentifier>//apple_ref/c/econst/BITAuthenticatorIdentificationTypeAnonymous</TokenIdentifier>
            <Abstract type="html">Assigns this app an anonymous user id.
&lt;br/&gt;&lt;br/&gt;
The user will not be asked anything and an anonymous ID will be generated.
This helps identifying this installation being unique but HockeyApp won&apos;t be able
to identify who actually is running this installation and on which device
the app is installed.
   </Abstract>
            <Declaration>BITAuthenticatorIdentificationTypeAnonymous</Declaration>
            
            <DeclaredIn>BITAuthenticator.h</DeclaredIn>
            
            <NodeRef refid="36"/>
        </Token>
        
        <Token>
            <TokenIdentifier>//apple_ref/c/econst/BITAuthenticatorIdentificationTypeHockeyAppEmail</TokenIdentifier>
            <Abstract type="html">Ask for the HockeyApp account email
&lt;br/&gt;&lt;br/&gt;
This will present a user interface requesting the user to provide their
HockeyApp user email address.
&lt;br/&gt;&lt;br/&gt;
The provided email address has to match an email address of a registered
HockeyApp user who is a member or tester of the app
   </Abstract>
            <Declaration>BITAuthenticatorIdentificationTypeHockeyAppEmail</Declaration>
            
            <DeclaredIn>BITAuthenticator.h</DeclaredIn>
            
            <NodeRef refid="36"/>
        </Token>
        
        <Token>
            <TokenIdentifier>//apple_ref/c/econst/BITAuthenticatorIdentificationTypeHockeyAppUser</TokenIdentifier>
            <Abstract type="html">Ask for the HockeyApp account by email and password
&lt;br/&gt;&lt;br/&gt;
This will present a user interface requesting the user to provide their
HockeyApp user credentials.
&lt;br/&gt;&lt;br/&gt;
The provided user account has to match a registered HockeyApp user who is
a member or tester of the app
   </Abstract>
            <Declaration>BITAuthenticatorIdentificationTypeHockeyAppUser</Declaration>
            
            <DeclaredIn>BITAuthenticator.h</DeclaredIn>
            
            <NodeRef refid="36"/>
        </Token>
        
        <Token>
            <TokenIdentifier>//apple_ref/c/econst/BITAuthenticatorIdentificationTypeDevice</TokenIdentifier>
            <Abstract type="html">Identifies the current device
&lt;br/&gt;&lt;br/&gt;
This will open the HockeyApp web page on the device in Safari and request the user
to submit the device&apos;s unique identifier to the app. If the web page session is not aware
of the current devices UDID, it will request the user to install the HockeyApp web clip
which will provide the UDID to users session in the browser.
&lt;br/&gt;&lt;br/&gt;
This requires the app to register an URL scheme. See the linked property and methods
for further documentation on this.
   </Abstract>
            <Declaration>BITAuthenticatorIdentificationTypeDevice</Declaration>
            
            <DeclaredIn>BITAuthenticator.h</DeclaredIn>
            
            <NodeRef refid="36"/>
        </Token>
        
        <Token>
            <TokenIdentifier>//apple_ref/c/econst/BITAuthenticatorIdentificationTypeWebAuth</TokenIdentifier>
            <Abstract type="html">Ask for the HockeyApp account email.
&lt;br/&gt;&lt;br/&gt;
This will present a user interface requesting the user to start a Safari based
flow to login to HockeyApp (if not already logged in) and to share the hockeyapp
account&apos;s email.
&lt;br/&gt;&lt;br/&gt;
If restrictApplicationUsage is enabled, the provided user account has to match a
registered HockeyApp user who is a member or tester of the app.
For identification purpose any HockeyApp user is allowed.
   </Abstract>
            <Declaration>BITAuthenticatorIdentificationTypeWebAuth</Declaration>
            
            <DeclaredIn>BITAuthenticator.h</DeclaredIn>
            
            <NodeRef refid="36"/>
        </Token>
        
        
	</File>
</Tokens>